
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Kirill Didus is a masters student majoring in computer science and applied informatics. His research interests are telecommunications and queing theory. He also shows interest in cybersecrity and has published numerous papers on that issue.\nDownload my resumé .\n","date":1372636800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1372636800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Kirill Didus is a masters student majoring in computer science and applied informatics. His research interests are telecommunications and queing theory. He also shows interest in cybersecrity and has published numerous papers on that issue.","tags":null,"title":"Kirill Didus","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://kirilldi.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":[],"content":"В этой статье рассмотрим структуру и полезные конструкции для оформления научной презентации в Markdown.\nАктуальность Важно донести результаты своих исследований до окружающих Научная презентация — рабочий инструмент исследователя Необходимо создавать презентацию быстро Желательна минимизация усилий для создания презентации Объект и предмет исследования Презентация как текст Программное обеспечение для создания презентаций Входные и выходные форматы презентаций Цели и задачи Создать шаблон презентации в Markdown Описать алгоритм создания выходных форматов презентаций Материалы и методы Процессор pandoc для входного формата Markdown Результирующие форматы pdf html Автоматизация процесса создания: Makefile Создание презентации Процессор pandoc Pandoc: преобразователь текстовых файлов Сайт: https://pandoc.org/ Репозиторий: https://github.com/jgm/pandoc Формат pdf Использование LaTeX Пакет для презентации: beamer Тема оформления: metropolis Код для формата pdf slide_level: 2 aspectratio: 169 section-titles: true theme: metropolis Формат html Используется фреймворк reveal.js Используется тема beige Код для формата html Тема задаётся в файле Makefile REVEALJS_THEME = beige Результаты Получающиеся форматы Полученный pdf-файл можно демонстрировать в любой программе просмотра pdf Полученный html-файл содержит в себе все ресурсы: изображения, css, скрипты Элементы презентации Актуальность Даёт понять, о чём пойдёт речь Следует широко и кратко описать проблему Мотивировать свое исследование Сформулировать цели и задачи Возможна формулировка ожидаемых результатов Цели и задачи Не формулируйте более 1–2 целей исследования Материалы и методы Представляйте данные качественно Количественно, только если крайне необходимо Излишние детали не нужны Содержание исследования Предлагаемое решение задач исследования с обоснованием Основные этапы работы Результаты Не нужны все результаты Необходимы логические связки между слайдами Необходимо показать понимание материала Итоговый слайд Запоминается последняя фраза. © Штирлиц Главное сообщение, которое вы хотите донести до слушателей Избегайте использовать последний слайд вида Спасибо за внимание Рекомендации Принцип 10/20/30 10 слайдов 20 минут на доклад 30 кегль шрифта Связь слайдов ::: incremental\nОдин слайд — одна мысль Нельзя ссылаться на объекты, находящиеся на предыдущих слайдах (например, на формулы) Каждый слайд должен иметь заголовок :::\nКоличество сущностей ::: incremental\nЧеловек может одновременно помнить $7 \\pm 2$ элемента При размещении информации на слайде старайтесь чтобы в сумме слайд содержал не более 5 элементов Можно группировать элементы так, чтобы визуально было не более 5 групп :::\nОбщие рекомендации ::: incremental\nНа слайд выносится та информация, которая без зрительной опоры воспринимается хуже Слайды должны дополнять или обобщать содержание выступления или его частей, а не дублировать его Информация на слайдах должна быть изложена кратко, чётко и хорошо структурирована Слайд не должен быть перегружен графическими изображениями и текстом Не злоупотребляйте анимацией и переходами :::\nПредставление данных ::: incremental\nЛучше представить в виде схемы Менее оптимально представить в виде рисунка, графика, таблицы Текст используется, если все предыдущие способы отображения информации не подошли :::\n","date":1667311415,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1667311415,"objectID":"4ab58efe792dbc9af81076d501a726b1","permalink":"https://kirilldi.github.io/post/sci_presentation/","publishdate":"2022-11-01T17:03:35+03:00","relpermalink":"/post/sci_presentation/","section":"post","summary":"В этой статье рассмотрим структуру и полезные конструкции для оформления научной презентации в Markdown.\nАктуальность Важно донести результаты своих исследований до окружающих Научная презентация — рабочий инструмент исследователя Необходимо создавать презентацию быстро Желательна минимизация усилий для создания презентации Объект и предмет исследования Презентация как текст Программное обеспечение для создания презентаций Входные и выходные форматы презентаций Цели и задачи Создать шаблон презентации в Markdown Описать алгоритм создания выходных форматов презентаций Материалы и методы Процессор pandoc для входного формата Markdown Результирующие форматы pdf html Автоматизация процесса создания: Makefile Создание презентации Процессор pandoc Pandoc: преобразователь текстовых файлов Сайт: https://pandoc.","tags":[],"title":"Рецепт по приготовлению научной презентации с markdown и beamer","type":"post"},{"authors":[],"categories":[],"content":"Цель работы Создания контента для персонализации шаблона сайта для научной коммуникации.\nЗадание Добавить к сайту достижения. Создать пост по прошлой неделе. Создать пост о легковесных языках разметки Теоретическое введение Личный блог является важным инструментов в научной коммуникации. Он позволяет получить доступ к научным работам, связаться с автором и получить общее впечатление о нем.\nДля создания блога воспользуемся следующими инструментами:\ngithub github pages в качестве хостинга hugo (программа с шаблонами для быстрого создания сайтов) Wowchemy (подборка тем для hugo) Выполнение лабораторной работы Найдем папку /content/home/ и внесем необходимые изменения в файлы соответствующие нужному блоку шаблона. Нас интересует раздел skills, activities and experience (рис. [-@fig:001]). Выполним коммит изменений в соотвествующие репозитории и запустим сайт командой hugo. Затем проверим работоспособность сайта. Все работает! (рис. [-@fig:002]). Создадим новый пост командой hugo new -kind post post/your-post-name. Он добавится в папку content/post.\nВыполним коммит изменений в соотвествующие репозитории и запустим сайт командой hugo. Затем проверим работоспособность сайта. Все работает! (рис. [-@fig:003]).\nВыводы В результате работы мы имеем персонализированный шаблон сайта на github pages. В дальнейшем мы будем его редактировать.\n","date":1667144986,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1667144986,"objectID":"13e4216eb9efdf6a7e6e58c5965bce85","permalink":"https://kirilldi.github.io/post/week3/","publishdate":"2022-10-30T18:49:46+03:00","relpermalink":"/post/week3/","section":"post","summary":"Цель работы Создания контента для персонализации шаблона сайта для научной коммуникации.\nЗадание Добавить к сайту достижения. Создать пост по прошлой неделе. Создать пост о легковесных языках разметки Теоретическое введение Личный блог является важным инструментов в научной коммуникации.","tags":[],"title":"Вот как я улучшал сайт на прошлой неделе (3 этап)","type":"post"},{"authors":[],"categories":[],"content":"Цель работы Создания контента для персонализации шаблона сайта для научной коммуникации.\nЗадание Обновить личные данные Создать первый пост Создать пост о системе управления версиями Теоретическое введение Личный блог является важным инструментов в научной коммуникации. Он позволяет получить доступ к научным работам, связаться с автором и получить общее впечатление о нем.\nДля создания блога воспользуемся следующими инструментами:\ngithub github pages в качестве хостинга hugo (программа с шаблонами для быстрого создания сайтов) Wowchemy (подборка тем для hugo) Выполнение лабораторной работы Найдем папку /content/authors/admin и внесем необходимые изменения в файл index.md. Он представляет собой шаблон визитной карточки сайта. Добавим изображение в папку admin и назовем его avatar. Выполним коммит изменений в соотвествующие репозитории и запустим сайт командой hugo. Затем проверим работоспособность сайта. Все работает!. Создадим новый пост командой hugo new –kind post post/your-post-name. Он добавится в папку content/post.\nВыполним коммит изменений в соотвествующие репозитории и запустим сайт командой hugo. Затем проверим работоспособность сайта. Все работает!.\nВыводы В результате работы мы имеем персонализированный шаблон сайта на github pages. В дальнейшем мы будем его редактировать.\n","date":1666457975,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666457975,"objectID":"10e7d36d1a0a7a8a2e44715d67e1f72b","permalink":"https://kirilldi.github.io/post/week2/","publishdate":"2022-10-22T19:59:35+03:00","relpermalink":"/post/week2/","section":"post","summary":"Цель работы Создания контента для персонализации шаблона сайта для научной коммуникации.\nЗадание Обновить личные данные Создать первый пост Создать пост о системе управления версиями Теоретическое введение Личный блог является важным инструментов в научной коммуникации.","tags":[],"title":"Вот как я улучшал сайт на прошлой неделе (этап 2)","type":"post"},{"authors":[],"categories":[],"content":"Введение В статье мы рассмотрим следующие темы:\nЧто такое языки разметки и зачем они нужны? Что такое LaTex? В чем особенность LaTex? Что такое языки разметки и зачем они нужны? Язы́к разме́тки (текста) в компьютерной терминологии — набор символов или последовательностей символов, вставляемых в текст для передачи информации о его отображении или строении. Принадлежит классу компьютерных языков. Текстовый документ, написанный с использованием языка разметки, содержит не только сам текст (как последовательность слов и знаков препинания), но и дополнительную информацию о различных его участках — например, указание на заголовки, выделения, списки и т. д. В более сложных случаях язык разметки позволяет вставлять в документ интерактивные элементы и содержание других документов.\nЧто такое LaTex? Что же такое LATEX? Если коротко, то это издательская система на базе TEX’а. Система компьютерной верстки TEX (произносится «тех») была создана выдающимся американским математиком и программистом Дональдом Кнутом в конце 70-х годов XX века; издательские системы на ее базе по сию пору широко используются и сдавать позиции не собираются. Вот краткий перечень TEX’овских достоинств:\nНикакая другая из существующих в настоящее время издательских систем не может сравниться с TEX’ом в полиграфическом качестве текстов с математическими формулами. Система TEX реализована на всех современных компьютерных платформах, и все эти реализации действительно работают одинаково. Благодаря этому TEX стал международным языком для обмена математическими и физическими статьями: набрав свою статью в TEX’е, математик может послать ее по электронной почте своему коллеге, даже если отправитель работает под Windows, а получатель — с UNIX’ом или, допустим, на Макинтоше. В Интернете существуют обширные «архивы препринтов», в которые каждый может послать (и из которых каждый может получить) статью; все эти статьи набраны опять-таки в TEX’е.\nНаконец, основные реализации TEX’а для всех платформ распространяются бесплатно. Как уже отмечалось TEX — это созданная американским математиком и программистом Дональдом Кнутом (Donald E. Knuth) система для верстки текстов с формулами. Сам по себе TEX представляет собой специализированный язык программирования (Кнут не только придумал язык, но и написал для него транслятор, причем таким образом, что он работает совершенно одинаково на самых разных компьютерах), на котором пишутся издательские системы, используемые на практике. Точнее говоря, каждая издательская система на базе TEX’а представляет собой пакет макроопределений (макропакет) этого языка. В частности, LATEX (произносится «латех» или «лэйтех», пишется также «LaTeX») — это созданная Лесли Лэмпортом (Leslie Lamport) издательская система на базе TEX’а.\nЧто особенного в LaTex? Этот инструмент используется повсеместно для создания научных документов, написания книг, а также многих других форм публикаций. Он позволяет не только создавать красиво оформленные документы, но также дает пользователям возможность очень быстро реализовывать такие сложные элементы печатного набора, как математические выражения, таблицы, ссылки и библиографии, получая согласованную разметку по всем разделам.\nБлагодаря доступности большого числа открытых библиотек (об этом чуть позже) возможности LaTEX становятся практически безграничны. Эти библиотеки расширяют возможности пользователей еще больше, позволяя добавлять сноски, рисовать схемы и пр.\nОдна из наиболее веских причин, по которой многие используют LaTeX, заключается в отделении содержания документа от его стиля. Это означает, что после написания содержимого, можно с легкостью изменять его внешний вид. Аналогичным образом, можно создать один стиль документа и использовать его для стандартизации внешнего вида других.\nЭто позволяет научным журналам создавать шаблоны для предлагаемых на рассмотрение материалов. Такие шаблоны имеют заданную разметку, в результате чего добавить остается лишь содержание. На деле существуют сотни подобных шаблонов, начиная с различных резюме и заканчивая презентациями слайдов\nВыводы LaTex - удобный и простой в использовании язык разметки. С помощью него можно создавать стандартизированные статьи и книги, он упрощает работу с текстовыми файлами благодаря возможности создания автоматического оглавления, списка литературы и прочих разделов, которые могут быть необходимы. У него огромное количество плюсов, его возможности практически безграничны благодаря большому количеству открытых библиотек.\n","date":1666457945,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666457945,"objectID":"48d1feae5c0ec3689da86c8084f7785c","permalink":"https://kirilldi.github.io/post/latex/","publishdate":"2022-10-22T19:59:05+03:00","relpermalink":"/post/latex/","section":"post","summary":"Введение В статье мы рассмотрим следующие темы:\nЧто такое языки разметки и зачем они нужны? Что такое LaTex? В чем особенность LaTex? Что такое языки разметки и зачем они нужны? Язы́к разме́тки (текста) в компьютерной терминологии — набор символов или последовательностей символов, вставляемых в текст для передачи информации о его отображении или строении.","tags":[],"title":"Математики, как супергерои - им тоже нужен латекс.","type":"post"},{"authors":[],"categories":[],"content":"Cистема управления версиями git Управление версиями — это система, сохраняющая изменения в файле или нескольких файлах, чтобы потом можно было видеть нужные старые версии. Если вы графический или веб-дизайнер и хотите хранить каждую версию изображения или макета — вот это вам наверняка нужно — то пользоваться системой управления версиями будет очень мудрым решением. Она позволяет вернуть файлы к прежнему виду, вернуть к прежнему состоянию весь проект, сравнить изменения с какого-то времени, увидеть, кто последним изменял модуль, который дал сбой, кто создал проблему, и так далее. К примеру, если, пользуясь СУВ, вы всё испортили или потеряли файлы, всё можно легко восстановить. Кроме того, издержки на это будут очень маленькими.\nЛокальные системы управления версиями Многие люди, чтобы управлять версиями, просто копируют файлы в другой каталог (умные ещё пишут текущую дату в название каталога). Такой подход очень распространён, потому что прост, но он ещё и чаще даёт сбои. Очень легко забыть, что ты не в том каталоге, и случайно изменить не тот файл, либо скопировать и перезаписать файлы не туда, куда хотел. Чтобы решить эту проблему, программисты уже давно разработали локальные СУВ, с простой базой данных, в которой хранились все изменения нужных файлов.\n{ рис.1. Локальные системы управления версиями. }\nЦентрализованные системы управления версиями Следующей большой проблемой оказалась необходимость сотрудничать с разработчиками за другими компьютерами. Чтобы решить её, были созданы централизованные системы управления версиями (ЦСУВ). В таких системах, например CVS, Subversion и Perforce, есть центральный сервер, на котором хранятся все отслеживаемые файлы, и ряд клиентов, которые получают копии файлов из него. Много лет это был стандарт управления версиями.\n{ рис.2. Схема централизованного управления версиями. }\nТакой подход имеет множество преимуществ, особенно над локальными СУВ. К примеру, все знают, кто и чем занимается в проекте. У администраторов есть чёткий контроль над тем, кто и что может делать, и, конечно, администрировать ЦСУВ гораздо легче, чем локальные базы на каждом клиенте. Однако при таком подходе есть и несколько серьёзных недостатков. Наиболее очевидный — централизованный сервер является уязвимым местом всей системы. Если сервер выключается на час, то в течение часа разработчики не могут взаимодействовать, и никто не может сохранить новые версии. Если же повреждается диск с центральной базой данных и нет резервной копии, вы теряете абсолютно всё — всю историю проекта, разве что за исключением нескольких рабочих версий, сохранившихся на рабочих машинах пользователей. Локальные системы управления версиями подвержены той же проблеме: если вся история проекта хранится в одном месте, вы рискуете потерять всё.\nРаспределённые системы контроля версий В такой ситуации в игру вступают распределенные системы управления версиями (РСУВ). В таких системах как Git, Mercurial, Bazaar или Darcs, клиенты не просто забирают последние версии файлов, а полностью копируют репозиторий. Поэтому в случае, когда “умирает” сервер, через который шла работа, любой клиентский репозиторий может быть скопирован обратно на сервер, чтобы восстановить базу данных. Каждый раз, когда клиент забирает свежую версию файлов, создаётся полная копия всех данных.\n{ рис.3. Схема распределенной системы управления версиями.}\n","date":1665247404,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1665247404,"objectID":"d74fef212fdae843a6140607b4b67c2d","permalink":"https://kirilldi.github.io/post/%D0%BD%D0%B5%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE/","publishdate":"2022-10-08T19:43:24+03:00","relpermalink":"/post/%D0%BD%D0%B5%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE/","section":"post","summary":"Cистема управления версиями git Управление версиями — это система, сохраняющая изменения в файле или нескольких файлах, чтобы потом можно было видеть нужные старые версии. Если вы графический или веб-дизайнер и хотите хранить каждую версию изображения или макета — вот это вам наверняка нужно — то пользоваться системой управления версиями будет очень мудрым решением.","tags":[],"title":"Немного о системах управления версиями","type":"post"},{"authors":[],"categories":[],"content":"Это мой первый пост Если вы читаете это сообщение, значит у меня получилось создать пост с помощью генератора сайтов Hugo и академичесокого шаблона Wowchemy\n","date":1665246479,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1665246479,"objectID":"71eb53a7be36879268b44d8bcd7838ef","permalink":"https://kirilldi.github.io/post/post-1/","publishdate":"2022-10-08T19:27:59+03:00","relpermalink":"/post/post-1/","section":"post","summary":"Это мой первый пост Если вы читаете это сообщение, значит у меня получилось создать пост с помощью генератора сайтов Hugo и академичесокого шаблона Wowchemy","tags":[],"title":"Мой первый пост!","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://kirilldi.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://kirilldi.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Kirill Didus","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://kirilldi.github.io/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]