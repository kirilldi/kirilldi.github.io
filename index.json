
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Kirill Didus is a masters student majoring in computer science and applied informatics. His research interests are telecommunications and queing theory. He also shows interest in cybersecrity and has published numerous papers on that issue.\nDownload my resumé .\n","date":1372636800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1372636800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Kirill Didus is a masters student majoring in computer science and applied informatics. His research interests are telecommunications and queing theory. He also shows interest in cybersecrity and has published numerous papers on that issue.","tags":null,"title":"Kirill Didus","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://kirilldi.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":[],"content":"In this article, we will look at the structure and useful constructs for designing a scientific presentation in Markdown.\nRelevance It is important to communicate the results of your research to others Scientific presentation — researcher’s working tool Need to create a presentation quickly It is desirable to minimize the effort to create a presentation Object and subject of research Presentation as text Software for creating presentations Input and output presentation formats Targets and goals Create presentation template in Markdown Describe the algorithm for creating output presentation formats Materials and methods pandoc processor for Markdown input format Resulting formats pdf html Automation of the creation process: Makefile Create a presentation Processor pandoc Pandoc: text file converter Website: https://pandoc.org/ Repository: https://github.com/jgm/pandoc Format pdf Using LaTeX Presentation package: beamer Theme: metropolis Code for pdf format slide_level: 2 aspect ratio: 169 section-titles: true theme: metropolis html format Used framework reveal.js Used theme beige Code for html format The theme is set in the Makefile REVEALJS_THEME = beige Results resulting formats The resulting pdf file can be displayed in any pdf viewer The resulting html-file contains all the resources: images, css, scripts Presentation elements Relevance Makes it clear what is going on Describe the problem broadly and concisely Motivate your research Formulate goals and objectives Possible formulation of expected results Targets and goals Do not formulate more than 1-2 research objectives Materials and methods Present data qualitatively Quantitatively, only if absolutely necessary No extra parts needed Research content The proposed solution to the research problems with justification Main stages of work Results Do not need all the results Requires logical links between slides Must show understanding of the material Summary slide The last phrase is remembered. © Stirlitz The main message you want to convey to your listeners Avoid using the last slide like Thank you for your attention Recommendations Principle 10/20/30 10 slides 20 minutes for presentation 30 font size Link slides ::: incremental\nOne slide — one thought You can not refer to objects that are on previous slides (for example, formulas) Each slide must have a title :::\nNumber of entities ::: incremental\nA person can remember $7 \\pm 2$ elements at the same time When placing information on a slide, try to make the slide contain no more than 5 elements in total You can group elements so that visually there are no more than 5 groups :::\nGeneral recommendations ::: incremental\nInformation that is perceived worse without visual support is placed on the slide Slides should complement or summarize the content of the speech or its parts, and not duplicate it Information on slides should be concise, clear and well structured The slide should not be overloaded with graphics and text Don’t overuse animations and transitions :::\nData representation ::: incremental\nIt is better to present in the form of a diagram Less optimal to present in the form of a picture, graph, table Text is used if all previous ways of displaying information did not fit :::\n","date":1667311415,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1667311415,"objectID":"4ab58efe792dbc9af81076d501a726b1","permalink":"https://kirilldi.github.io/post/sci_presentation/","publishdate":"2022-11-01T17:03:35+03:00","relpermalink":"/post/sci_presentation/","section":"post","summary":"In this article, we will look at the structure and useful constructs for designing a scientific presentation in Markdown.\nRelevance It is important to communicate the results of your research to others Scientific presentation — researcher’s working tool Need to create a presentation quickly It is desirable to minimize the effort to create a presentation Object and subject of research Presentation as text Software for creating presentations Input and output presentation formats Targets and goals Create presentation template in Markdown Describe the algorithm for creating output presentation formats Materials and methods pandoc processor for Markdown input format Resulting formats pdf html Automation of the creation process: Makefile Create a presentation Processor pandoc Pandoc: text file converter Website: https://pandoc.","tags":[],"title":"How to make scientific presentations with markdown and beamer","type":"post"},{"authors":[],"categories":[],"content":"Objective Creating content to personalize the site template for scientific communication.\nExercise Add achievements to the site. Create a post from last week. Create a post about lightweight markup languages Theoretical introduction A personal blog is an important tool in scientific communication. It allows you to access scientific papers, contact the author and get a general impression of him.\nTo create a blog, we will use the following tools:\ngithub github pages as hosting hugo (a program with templates for quickly creating websites) Wowchemy (hugo theme collection) Performing the lab Find the /content/home/ folder and make the necessary changes to the files corresponding to the desired template block. We are interested in the skills, activities and experience section (fig. [-@fig:001]). Let’s commit the changes to the appropriate repositories and launch the site with the hugo command. Then we will check the functionality of the site. Everything is working! (fig. [-@fig:002]). Create a new post with the hugo new -kind post post/your-post-name command. It will be added to the content/post folder.\nLet’s commit the changes to the appropriate repositories and launch the site with the hugo command. Then we will check the functionality of the site. Everything is working! (fig. [-@fig:003]).\nConclusions As a result of the work, we have a personalized website template on github pages. We will edit it later.\n","date":1667144986,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1667144986,"objectID":"13e4216eb9efdf6a7e6e58c5965bce85","permalink":"https://kirilldi.github.io/post/week3/","publishdate":"2022-10-30T18:49:46+03:00","relpermalink":"/post/week3/","section":"post","summary":"Objective Creating content to personalize the site template for scientific communication.\nExercise Add achievements to the site. Create a post from last week. Create a post about lightweight markup languages Theoretical introduction A personal blog is an important tool in scientific communication.","tags":[],"title":"Here's How I Improved the Website Last Week (Stage 3)","type":"post"},{"authors":[],"categories":[],"content":"Objective Creating content to personalize the site template for scientific communication.\nExercise Update personal data Create first post Create a post about the version control system Theoretical introduction A personal blog is an important tool in scientific communication. It allows you to access scientific papers, contact the author and get a general impression of him.\nTo create a blog, we will use the following tools:\ngithub github pages as hosting hugo (a program with templates for quickly creating websites) Wowchemy (hugo theme collection) Performing the lab Find the /content/authors/admin folder and make the necessary changes to the index.md file. It is a website business card template. Add an image to the admin folder and name it avatar. Let’s commit the changes to the appropriate repositories and launch the site with the hugo command. Then we will check the functionality of the site. Everything is working!. Create a new post with hugo new –kind post post/your-post-name. It will be added to the content/post folder.\nLet’s commit the changes to the appropriate repositories and launch the site with the hugo command. Then we will check the functionality of the site. Everything is working!.\nConclusions As a result of the work, we have a personalized website template on github pages. We will edit it later.\n","date":1666457975,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666457975,"objectID":"10e7d36d1a0a7a8a2e44715d67e1f72b","permalink":"https://kirilldi.github.io/post/week2/","publishdate":"2022-10-22T19:59:35+03:00","relpermalink":"/post/week2/","section":"post","summary":"Objective Creating content to personalize the site template for scientific communication.\nExercise Update personal data Create first post Create a post about the version control system Theoretical introduction A personal blog is an important tool in scientific communication.","tags":[],"title":"Here's How I Improved the Website Last Week (Phase 2)","type":"post"},{"authors":[],"categories":[],"content":"Introduction In this article, we will cover the following topics:\nWhat are markup languages ​​and why are they needed?\nWhat is Latex? What is special about LaTeX? What are markup languages ​​and why are they needed? A markup language (text) in computer terminology is a set of characters or sequences of characters inserted into text to convey information about its display or structure. It belongs to the class of computer languages. A text document written using a markup language contains not only the text itself (as a sequence of words and punctuation marks), but also additional information about its various sections - for example, an indication of headings, highlights, lists, etc. In more complex cases A markup language allows you to insert interactive elements and content from other documents into a document.\nWhat is LaTeX? What is LATEX? In short, it is a TEX-based publishing system. The computer layout system TEX (pronounced “tech”) was created by the prominent American mathematician and programmer Donald Knuth in the late 70s of the XX century; publishing systems based on it are still widely used and are not going to give up their positions. Here is a short list of TEX’s advantages:\nNo other publishing system currently in existence can match TEX in the printing quality of texts with mathematical formulas. The TEX system has been implemented on all modern computer platforms, and all of these implementations do indeed work in the same way. Thanks to this, TEX has become an international language for the exchange of mathematical and physical articles: having typed his article in TEX, a mathematician can send it by e-mail to his colleague, even if the sender is running Windows and the recipient is running UNIX or, say, on Macintosh. There are extensive “preprint archives” on the Internet to which anyone can submit (and from which anyone can receive) an article; all these articles are typed again in TEX.\nFinally, the core TEX implementations for all platforms are free. As already noted, TEX is a system created by the American mathematician and programmer Donald E. Knuth for typesetting texts with formulas. By itself, TEX is a specialized programming language (Knuth not only invented the language, but also wrote a translator for it, and in such a way that it works in exactly the same way on a variety of computers), in which publishing systems used in practice are written. More precisely, each TEX-based publishing system is a package of macro definitions (macropackage) of this language. Specifically, LATEX (pronounced “latex” or “latex”, also spelled “LaTeX”) is a TEX-based publishing system created by Leslie Lamport.\nWhat’s special about LaTeX? This tool is used ubiquitously to create scientific papers, write books, and many other forms of publication. It allows not only to create beautifully designed documents, but also allows users to implement complex typesetting elements such as mathematical expressions, tables, references and bibliographies very quickly, getting consistent markup across all sections.\nThanks to the availability of a large number of open libraries (more on that later), the possibilities of LaTeX are almost limitless. These libraries extend the user experience even further, allowing you to add footnotes, draw diagrams, and more.\nOne of the most compelling reasons many people use LaTeX is to separate the content of a document from its style. This means that after writing the content, you can easily change its appearance. Similarly, you can create one document style and use it to standardize the look of others.\nThis allows scientific journals to create templates for submissions. These templates have pre-defined markup, leaving only the content to be added. In fact, there are hundreds of such templates, ranging from various resumes to slide presentations.\nConclusions LaTeX - convenient and simple\n","date":1666457945,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666457945,"objectID":"48d1feae5c0ec3689da86c8084f7785c","permalink":"https://kirilldi.github.io/post/latex/","publishdate":"2022-10-22T19:59:05+03:00","relpermalink":"/post/latex/","section":"post","summary":"Introduction In this article, we will cover the following topics:\nWhat are markup languages ​​and why are they needed?\nWhat is Latex? What is special about LaTeX? What are markup languages ​​and why are they needed?","tags":[],"title":"Mathematicians are like superheroes - they need latex too.","type":"post"},{"authors":[],"categories":[],"content":"git version control system Versioning is a system that saves changes to a file or files so that you can later see the desired old versions. If you are a graphic or web designer and you want to store every version of an image or layout - which is what you need - then using a version control system will be a very wise decision. It allows you to revert files, revert an entire project, compare changes since a certain time, see who last modified the module that failed, who created the problem, and so on. For example, if, using the SUV, you messed up everything or lost files, everything can be easily restored. In addition, the costs for this will be very small.\nLocal version control systems Many people simply copy files to another directory to manage versions (smart people also write the current date in the name of the directory). This approach is very common because it is simple, but it also fails more often. It’s very easy to forget you’re in the wrong directory and accidentally change the wrong file, or copy and overwrite files in the wrong place. To solve this problem, programmers have long developed local VCS, with a simple database that stores all changes to the desired files.\n{ Fig.1. Local version control systems. }\nCentralized version control systems The next big problem was the need to collaborate with developers on other computers. To solve it, centralized version control systems (CSVs) were created. Such systems, such as CVS, Subversion, and Perforce, have a central server that stores all tracked files, and a number of clients that receive copies of the files from it. For many years this has been the version control standard.\n{ Fig.2. Centralized version control scheme. }\nThis approach has many advantages, especially over local VMS. For example, everyone knows who does what in the project. Administrators have clear control over who can do what and, of course, administering the CCMS is much easier than local databases on each client. However, there are several serious drawbacks to this approach. The most obvious one is that the centralized server is the weak point of the entire system. If the server goes down for an hour, then for an hour developers cannot interact and no one can save new versions. If the disk with the central database is damaged and there is no backup, you lose absolutely everything - the entire history of the project, except perhaps for a few working versions that have been saved on users’ working machines. Local version control systems suffer from the same problem: if the entire history of a project is stored in one place, you risk losing everything.\nDistributed version control systems This is where Distributed Version Control Systems (DVCS) come into play. In systems like Git, Mercurial, Bazaar, or Darcs, clients don’t just pull the latest versions of files, they copy the entire repository. Therefore, in the event that the server through which the work was going “dies”, any client repository can be copied back to the server in order to restore the database. Each time a client checks out a fresh version of the files, a complete copy of all data is created.\n{ Fig.3. Diagram of a distributed version control system.}\n","date":1665247404,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1665247404,"objectID":"d74fef212fdae843a6140607b4b67c2d","permalink":"https://kirilldi.github.io/post/%D0%BD%D0%B5%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE/","publishdate":"2022-10-08T19:43:24+03:00","relpermalink":"/post/%D0%BD%D0%B5%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE/","section":"post","summary":"git version control system Versioning is a system that saves changes to a file or files so that you can later see the desired old versions. If you are a graphic or web designer and you want to store every version of an image or layout - which is what you need - then using a version control system will be a very wise decision.","tags":[],"title":"About version control systems","type":"post"},{"authors":[],"categories":[],"content":"Это мой первый пост Если вы читаете это сообщение, значит у меня получилось создать пост с помощью генератора сайтов Hugo и академичесокого шаблона Wowchemy\n","date":1665246479,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1665246479,"objectID":"71eb53a7be36879268b44d8bcd7838ef","permalink":"https://kirilldi.github.io/post/post-1/","publishdate":"2022-10-08T19:27:59+03:00","relpermalink":"/post/post-1/","section":"post","summary":"Это мой первый пост Если вы читаете это сообщение, значит у меня получилось создать пост с помощью генератора сайтов Hugo и академичесокого шаблона Wowchemy","tags":[],"title":"Мой первый пост!","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://kirilldi.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://kirilldi.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Kirill Didus","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://kirilldi.github.io/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]